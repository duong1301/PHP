--
-- Script was generated by Devart dbForge Studio 2020 for MySQL, Version 9.0.338.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 11/23/2023 7:18:57 PM
-- Server version: 10.4.28
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

DROP DATABASE IF EXISTS nvduong;

CREATE DATABASE IF NOT EXISTS nvduong
CHARACTER SET utf8mb4
COLLATE utf8mb4_general_ci;

--
-- Set default database
--
USE nvduong;

--
-- Create table `classes`
--
CREATE TABLE IF NOT EXISTS classes (
  classId varchar(36) NOT NULL DEFAULT '',
  name varchar(10) NOT NULL DEFAULT '',
  schoolYear int(11) NOT NULL,
  PRIMARY KEY (classId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 10922,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `UNIQUE_name_schoolYear` on table `classes`
--
ALTER TABLE classes
ADD UNIQUE INDEX UNIQUE_name_schoolYear (name, schoolYear);

DELIMITER $$

--
-- Create procedure `proc_class_del`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_class_del (IN classId char(36))
BEGIN
  DELETE
    FROM classes
  WHERE classes.classId = classId;
END
$$

--
-- Create procedure `proc_class_add`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_class_add (IN name varchar(50), IN schoolYear int)
BEGIN
  INSERT INTO classes (classId, name, schoolYear)
    VALUES (UUID(), name, schoolYear);

  SELECT
    *
  FROM classes;

END
$$

DELIMITER ;

--
-- Create table `students`
--
CREATE TABLE IF NOT EXISTS students (
  studentId char(36) NOT NULL DEFAULT '',
  firstName varchar(50) NOT NULL DEFAULT '',
  lastName varchar(50) NOT NULL DEFAULT '',
  classId char(36) NOT NULL DEFAULT '',
  dob date DEFAULT NULL,
  studentCode varchar(10) DEFAULT NULL,
  PRIMARY KEY (studentId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `studentCode` on table `students`
--
ALTER TABLE students
ADD UNIQUE INDEX studentCode (studentCode);

--
-- Create foreign key
--
ALTER TABLE students
ADD CONSTRAINT FK_students_classId FOREIGN KEY (classId)
REFERENCES classes (classId);

DELIMITER $$

--
-- Create procedure `proc_student_del`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_student_del (IN studentId char(36))
BEGIN
  DELETE
    FROM students
  WHERE students.studentId = studentId;
END
$$

--
-- Create procedure `proc_student_add`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_student_add (IN firstName varchar(50), IN lastName varchar(50), IN classId char(36), IN dob date)
BEGIN
  INSERT INTO students (studentId, firstName, lastName, classId, dob)
    VALUES (UUID(), firstName, lastName, classId, dob);
END
$$

DELIMITER ;

--
-- Create view `view_student`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW IF NOT EXISTS view_student
AS
SELECT
  `s`.`studentId` AS `studentId`,
  `s`.`firstName` AS `firstName`,
  `s`.`lastName` AS `lastName`,
  `s`.`classId` AS `classId`,
  `s`.`dob` AS `dob`,
  `c`.`name` AS `className`,
  `c`.`schoolYear` AS `schoolYearStart`,
  `c`.`schoolYear` + 3 AS `schoolYearEnd`
FROM (`students` `s`
  LEFT JOIN `classes` `c`
    ON (`s`.`classId` = `c`.`classId`));

DELIMITER $$

--
-- Create procedure `proc_student_class`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_student_class (IN classId char(36))
BEGIN
  SELECT
    *
  FROM view_student vs
  WHERE vs.classId = classId;
END
$$

DELIMITER ;

--
-- Create view `view_classes`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW IF NOT EXISTS view_classes
AS
SELECT
  `c`.`classId` AS `classId`,
  `c`.`name` AS `name`,
  `c`.`schoolYear` AS `schoolYear`,
  `c`.`schoolYear` + 3 AS `schoolYearFinish`,
  COUNT(`s`.`studentId`) AS `qlt`
FROM (`classes` `c`
  LEFT JOIN `students` `s`
    ON (`c`.`classId` = `s`.`classId`))
GROUP BY `c`.`classId`;

DELIMITER $$

--
-- Create procedure `proc_class_getAll`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_class_getAll ()
BEGIN
  SELECT
    *
  FROM view_classes vc;
END
$$

DELIMITER ;

--
-- Create table `subjects`
--
CREATE TABLE IF NOT EXISTS subjects (
  subjectId char(36) NOT NULL DEFAULT '' COMMENT 'id môn học',
  subjectCode varchar(10) NOT NULL DEFAULT '' COMMENT 'mã môn học',
  name varchar(50) NOT NULL DEFAULT '' COMMENT 'tên môn học',
  type smallint(6) DEFAULT 0 COMMENT 'type = 0 tính diểm; type = 1 điều kiện',
  PRIMARY KEY (subjectId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `subjectCode` on table `subjects`
--
ALTER TABLE subjects
ADD UNIQUE INDEX subjectCode (subjectCode);

DELIMITER $$

--
-- Create procedure `proc_subject_getAll`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_subject_getAll ()
BEGIN
  SELECT
    *
  FROM subjects s;

END
$$

--
-- Create procedure `proc_subject_del`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_subject_del (IN subjectId char(36))
BEGIN
  DELETE
    FROM subjects
  WHERE subjects.subjectId = subjectId;
END
$$

--
-- Create procedure `proc_subject_add`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_subject_add (IN subjectCode varchar(10), IN name varchar(50), IN type smallint)
BEGIN

  INSERT INTO subjects (subjectId, subjectCode, name, type, subjectCode)
    VALUES (UUID(), subjectCode, name, type);
END
$$

DELIMITER ;

--
-- Create view `view_subjects`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW IF NOT EXISTS view_subjects
AS
SELECT
  `s`.`subjectId` AS `subjectId`,
  `s`.`subjectCode` AS `subjectCode`,
  `s`.`name` AS `name`,
  `s`.`type` AS `type`
FROM `subjects` `s`;

--
-- Create table `teachers`
--
CREATE TABLE IF NOT EXISTS teachers (
  teacherId char(36) NOT NULL DEFAULT '',
  firstName varchar(50) DEFAULT NULL,
  lastName varchar(50) DEFAULT NULL,
  phone varchar(50) NOT NULL DEFAULT '',
  email varchar(50) NOT NULL DEFAULT '',
  subjectId char(36) DEFAULT NULL,
  PRIMARY KEY (teacherId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `email` on table `teachers`
--
ALTER TABLE teachers
ADD UNIQUE INDEX email (email);

--
-- Create index `phone` on table `teachers`
--
ALTER TABLE teachers
ADD UNIQUE INDEX phone (phone);

--
-- Create foreign key
--
ALTER TABLE teachers
ADD CONSTRAINT FK_teachers_subjectId FOREIGN KEY (subjectId)
REFERENCES subjects (subjectId) ON DELETE NO ACTION;

DELIMITER $$

--
-- Create procedure `proc_teacher_del`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_teacher_del (IN teacherId char(36))
BEGIN
  DELETE
    FROM teachers
  WHERE teachers.teacherId = teacherId;
END
$$

--
-- Create procedure `proc_teacher_add`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_teacher_add (IN firstName varchar(50), IN lastName varchar(50), IN phone varchar(20), IN email varchar(50), IN subjectId char(36))
BEGIN
  INSERT INTO teachers (teacherId, firstName, lastName, phone, email, subjectId)
    VALUES (UUID(), firstName, lastName, phone, email, subjectId);
END
$$

DELIMITER ;

--
-- Create view `view_teachers`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW IF NOT EXISTS view_teachers
AS
SELECT
  `t`.`teacherId` AS `teacherId`,
  `t`.`firstName` AS `firstName`,
  `t`.`lastName` AS `lastName`,
  `t`.`phone` AS `phone`,
  `t`.`email` AS `email`,
  `t`.`subjectId` AS `subjectId`,
  `s`.`name` AS `subjectName`
FROM (`teachers` `t`
  LEFT JOIN `subjects` `s`
    ON (`t`.`subjectId` = `s`.`subjectId`));

DELIMITER $$

--
-- Create procedure `proc_teacher_getAll`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_teacher_getAll ()
BEGIN
  SELECT
    *
  FROM view_teachers vt;
END
$$

DELIMITER ;

--
-- Create table `teacherclasses`
--
CREATE TABLE IF NOT EXISTS teacherclasses (
  classId char(36) NOT NULL DEFAULT '',
  teacherId char(36) NOT NULL DEFAULT '',
  semester int(11) NOT NULL,
  year int(11) NOT NULL
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `UK_teacherclasses` on table `teacherclasses`
--
ALTER TABLE teacherclasses
ADD UNIQUE INDEX UK_teacherclasses (classId, teacherId, semester, year);

--
-- Create foreign key
--
ALTER TABLE teacherclasses
ADD CONSTRAINT FK_teacherclasses_classId FOREIGN KEY (classId)
REFERENCES classes (classId);

--
-- Create foreign key
--
ALTER TABLE teacherclasses
ADD CONSTRAINT FK_teacherclasses_teacherId FOREIGN KEY (teacherId)
REFERENCES teachers (teacherId) ON DELETE NO ACTION;

DELIMITER $$

--
-- Create procedure `proc_teacherClass_del`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_teacherClass_del (IN teacherId char(36), IN classId char(36))
BEGIN
  DELETE
    FROM teacherclasses
  WHERE (teacherclasses.teacherId = teacherId
    && teacherclasses.classId = classId);
END
$$

--
-- Create procedure `proc_teacherClass_add`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_teacherClass_add (IN teacherId char(36), IN classId char(36), IN semester smallint, IN year int)
BEGIN
  INSERT INTO teacherclasses (classId, teacherId, semester, year)
    VALUES (classId, teacherId, semester, year);
END
$$

DELIMITER ;

--
-- Create view `view_teaching`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW IF NOT EXISTS view_teaching
AS
SELECT
  `teacherclasses`.`teacherId` AS `teacherId`,
  `teacherclasses`.`classId` AS `classId`,
  `teacherclasses`.`semester` AS `semester`,
  `teacherclasses`.`year` AS `year`
FROM `teacherclasses`;

--
-- Create table `scores`
--
CREATE TABLE IF NOT EXISTS scores (
  studentId char(36) NOT NULL DEFAULT '',
  classId char(36) NOT NULL DEFAULT '',
  schoolYear int(11) NOT NULL,
  subjectId char(36) NOT NULL DEFAULT '',
  semester smallint(6) NOT NULL,
  oralTest float DEFAULT NULL,
  fifTest1 float DEFAULT NULL,
  fifTest2 float DEFAULT NULL,
  periodTest1 float DEFAULT NULL,
  periodTest2 float DEFAULT NULL,
  finalTest float DEFAULT NULL,
  year int(11) NOT NULL
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create check constraint
--
ALTER TABLE scores
ADD CONSTRAINT CK_scores CHECK (`year` BETWEEN 1 AND 3);

--
-- Create index `UK_scores` on table `scores`
--
ALTER TABLE scores
ADD UNIQUE INDEX UK_scores (studentId, classId, schoolYear, subjectId, semester, year);

--
-- Create foreign key
--
ALTER TABLE scores
ADD CONSTRAINT FK_scores_classId FOREIGN KEY (classId)
REFERENCES classes (classId) ON DELETE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE scores
ADD CONSTRAINT FK_scores_studentId FOREIGN KEY (studentId)
REFERENCES students (studentId);

--
-- Create foreign key
--
ALTER TABLE scores
ADD CONSTRAINT FK_scores_subjectId FOREIGN KEY (subjectId)
REFERENCES subjects (subjectId);

DELIMITER $$

--
-- Create procedure `proc_score_add`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_score_add (IN studentId char(36), IN classId char(36), IN subjectId char(36), IN schoolYear int, IN semester smallint, IN year int, IN oralTest float, IN fifTest1 float, IN fifTest2 float, IN periodTest1 float, IN periodTest2 float, IN finalTest float)
BEGIN
  INSERT INTO scores (studentId, classId, schoolYear, subjectId, semester, oralTest, fifTest1, fifTest2, periodTest1, periodTest2, finalTest, year)
    VALUES (studentId, classId, schoolYear, subjectId, semester, 0, 0, 0, 0, 0, 0, year);
END
$$

DELIMITER ;

--
-- Create view `view_score`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW IF NOT EXISTS view_score
AS
SELECT
  `s`.`studentId` AS `studentId`,
  `s`.`classId` AS `classId`,
  `s`.`schoolYear` AS `schoolYear`,
  `s`.`subjectId` AS `subjectId`,
  `s`.`semester` AS `semester`,
  `s`.`oralTest` AS `oralTest`,
  `s`.`fifTest1` AS `fifTest1`,
  `s`.`fifTest2` AS `fifTest2`,
  `s`.`periodTest1` AS `periodTest1`,
  `s`.`periodTest2` AS `periodTest2`,
  `s`.`finalTest` AS `finalTest`,
  `s`.`year` AS `year`
FROM `scores` `s`;

--
-- Create table `users`
--
CREATE TABLE IF NOT EXISTS users (
  userId char(36) NOT NULL DEFAULT '',
  name varchar(50) NOT NULL DEFAULT '',
  username varchar(50) NOT NULL DEFAULT '',
  email varchar(50) NOT NULL DEFAULT '',
  password varchar(50) NOT NULL DEFAULT '',
  level smallint(6) NOT NULL,
  PRIMARY KEY (userId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `email` on table `users`
--
ALTER TABLE users
ADD UNIQUE INDEX email (email);

--
-- Create index `username` on table `users`
--
ALTER TABLE users
ADD UNIQUE INDEX username (username);

DELIMITER $$

--
-- Create procedure `proc_user_getAll`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_user_getAll ()
BEGIN
  SELECT
    *
  FROM users u;
END
$$

--
-- Create procedure `proc_user_del`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_user_del (IN userId char(36))
BEGIN
  DELETE
    FROM users
  WHERE users.userId = userId;
END
$$

--
-- Create procedure `proc_user_add`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proc_user_add (IN name varchar(50), IN userName varchar(50), IN email varchar(50), IN password varchar(50), IN level smallint)
BEGIN
  INSERT INTO users
    VALUE (UUID(), name, userName, email, password, level);
END
$$

DELIMITER ;

--
-- Create view `view_users`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW IF NOT EXISTS view_users
AS
SELECT
  `users`.`userId` AS `userId`,
  `users`.`name` AS `name`,
  `users`.`username` AS `username`,
  `users`.`email` AS `email`,
  `users`.`password` AS `password`,
  `users`.`level` AS `level`
FROM `users`;

-- 
-- Dumping data for table subjects
--
INSERT INTO subjects VALUES
('6eab9829-856e-11ee-b054-adccf5692a9a', 'S01', 'Toán', 0),
('89746819-856e-11ee-b054-adccf5692a9a', 'S02', 'Văn', 0),
('9507b1a9-856e-11ee-b054-adccf5692a9a', 'S03', 'Ngoại Ngữ', 0),
('a3e828b5-856e-11ee-b054-adccf5692a9a', 'S04', 'Thể dục', 1);

-- 
-- Dumping data for table classes
--
INSERT INTO classes VALUES
('60991d21-8577-11ee-b054-adccf5692a9a', 'A1', 2023),
('6928f45e-8577-11ee-b054-adccf5692a9a', 'A2', 2023),
('732d98d9-8577-11ee-b054-adccf5692a9a', 'A3', 2023);

-- 
-- Dumping data for table teachers
--
INSERT INTO teachers VALUES
('0b8c4f9e-8573-11ee-b054-adccf5692a9a', 'Cường', 'Nguyễn Văn', '0987654323', 'nvcuong@gmail.com', '89746819-856e-11ee-b054-adccf5692a9a'),
('15f14bab-8571-11ee-b054-adccf5692a9a', 'An', 'Nguyễn Văn', '0987654321', 'nvan@gmail.com', '6eab9829-856e-11ee-b054-adccf5692a9a'),
('291f30fd-8573-11ee-b054-adccf5692a9a', 'Dũng', 'Nguyễn Văn', '0987654324', 'nvdung@gmail.com', 'a3e828b5-856e-11ee-b054-adccf5692a9a'),
('30888b21-8571-11ee-b054-adccf5692a9a', 'Bình', 'Nguyễn Văn', '0987654322', 'nvbinh@gmail.com', '6eab9829-856e-11ee-b054-adccf5692a9a');

-- 
-- Dumping data for table students
--
INSERT INTO students VALUES
('57efac3c-86d2-11ee-bf43-6b3ffb30fb5a', 'Hoang', 'Nguyen Van', '6928f45e-8577-11ee-b054-adccf5692a9a', '2023-02-19', NULL),
('65e8c3b9-86d2-11ee-bf43-6b3ffb30fb5a', 'Chuyên', 'Nguyen Van', '6928f45e-8577-11ee-b054-adccf5692a9a', '2023-02-19', NULL),
('72f5a7cc-86d2-11ee-bf43-6b3ffb30fb5a', 'Tạo', 'Nguyen Van', '732d98d9-8577-11ee-b054-adccf5692a9a', '2023-02-19', NULL),
('cda7aed5-857d-11ee-b054-adccf5692a9a', 'Nam', 'Nguyễn Văn', '60991d21-8577-11ee-b054-adccf5692a9a', '2023-12-18', NULL),
('f4c0d127-8580-11ee-b054-adccf5692a9a', 'Nam', 'Nguyễn Văn', '60991d21-8577-11ee-b054-adccf5692a9a', '2023-12-18', NULL);

-- 
-- Dumping data for table users
--
INSERT INTO users VALUES
('5b36e131-8972-11ee-954f-61793bbd05df', 'Nguyen Van An', 'annv', 'annguyenvan@gmail.com', '123', 1),
('65efaf8c-8971-11ee-954f-61793bbd05df', 'Nguyễn Văn Dương', 'nvduong', 'c3tanlaphanoi@gmail.com', '123', 0),
('7104c4f4-8972-11ee-954f-61793bbd05df', 'DUong', 'nvd', 'duong@email.com', '123', 1);

-- 
-- Dumping data for table teacherclasses
--
INSERT INTO teacherclasses VALUES
('60991d21-8577-11ee-b054-adccf5692a9a', '0b8c4f9e-8573-11ee-b054-adccf5692a9a', 1, 2023),
('60991d21-8577-11ee-b054-adccf5692a9a', '0b8c4f9e-8573-11ee-b054-adccf5692a9a', 1, 2024),
('60991d21-8577-11ee-b054-adccf5692a9a', '0b8c4f9e-8573-11ee-b054-adccf5692a9a', 2, 2023),
('60991d21-8577-11ee-b054-adccf5692a9a', '0b8c4f9e-8573-11ee-b054-adccf5692a9a', 2, 2024);

-- 
-- Dumping data for table scores
--
INSERT INTO scores VALUES
('cda7aed5-857d-11ee-b054-adccf5692a9a', '60991d21-8577-11ee-b054-adccf5692a9a', 2023, '6eab9829-856e-11ee-b054-adccf5692a9a', 1, 0, 0, 0, 0, 0, 0, 1),
('cda7aed5-857d-11ee-b054-adccf5692a9a', '60991d21-8577-11ee-b054-adccf5692a9a', 2023, '6eab9829-856e-11ee-b054-adccf5692a9a', 2, 0, 0, 0, 0, 0, 0, 1),
('cda7aed5-857d-11ee-b054-adccf5692a9a', '732d98d9-8577-11ee-b054-adccf5692a9a', 2023, '6eab9829-856e-11ee-b054-adccf5692a9a', 1, 8, 8, 8, 8, 8, 8, 3);

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;